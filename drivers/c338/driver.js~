"use strict";
// need Homey module, see SDK Guidelines
const Homey = require('homey');

class D7050Driver extends Homey.Driver {

  onPair(socket) {
    // socket is a direct channel to the front-end

              var devices = [
            {
                "name": "My Device",
                "data": { "id": "abcd" }
            }
        ]

    // this is called when the user presses save settings button in start.html
    socket.on('get_devices', function (data, callback) {

      console.log("NAD D7050 app - get_devices data: " + JSON.stringify(data));

      // TODO: should check if IP leads to an actual NAD 7050 device
      // assume IP is OK and continue, which will cause the front-end to run list_amplifiers which is the template list_devices

      // generate pseudo-random ID
      var id = Math.round(Math.random() * (100000 - 10000) + 10000);
      devices = [{
        data: {
          id: id
        },
        name: data.deviceName,
        settings: {
          "settingIPAddress": data.ipaddress,
          "stayConnected": data.stayConnected
        } // initial settings
      }]; 

      //console.log("NAD D7050 app - get_devices devices: " + JSON.stringify(devices));

      // ready to continue pairing
      letsContinue(socket);
      callback(null, devices);

    });

    // this method is run when Homey.emit('list_devices') is run on the front-end
    // which happens when you use the template `list_devices`
    // pairing: start.html -> get_devices -> list_devices -> add_devices
    socket.on('list_devices', function (data, callback) {
      console.log("NAD D7050 app - get_devices data: " + JSON.stringify(data));
      console.log("NAD D7050 app - list_devices data: " + JSON.stringify(data));
      console.log("NAD D7050 app - list_devices devices: " + JSON.stringify(devices));

      callback(null, devices);
    });

    // this happens when user clicks away the pairing windows
    socket.on('disconnect', function () {
      console.log("NAD D7050 app - Pairing is finished (done or aborted)"); // using console.log because this.log or Homey.log is not a function
    })

    function letsContinue(socket) {
      socket.emit('continue', null);
    }
  };
}

module.exports = D7050Driver;